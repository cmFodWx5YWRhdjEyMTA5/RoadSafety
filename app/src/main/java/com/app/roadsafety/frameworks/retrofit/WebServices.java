package com.app.roadsafety.frameworks.retrofit;import com.app.roadsafety.model.authentication.FacebookLoginRequest;import com.app.roadsafety.model.authentication.LoginResponse;import com.app.roadsafety.model.cityhall.CityHallResponse;import com.app.roadsafety.model.createIncident.CreateIncidentRequest;import com.app.roadsafety.model.createIncident.CreateIncidentResponse;import com.app.roadsafety.model.createIncident.ReportAbuseIncidentRequest;import com.app.roadsafety.model.createIncident.ReportAbuseIncidentResponse;import com.app.roadsafety.model.feed.FeedResponse;import com.app.roadsafety.model.guidelines.GuidelinesResponse;import com.app.roadsafety.model.incidents.IncidentDetailResponse;import com.app.roadsafety.model.incidents.IncidentResponse;import com.app.roadsafety.model.markresolved.MarkResolvedRequest;import com.app.roadsafety.model.markresolved.MarkResolvedResponse;import com.app.roadsafety.model.notification.NotificationResponse;import com.app.roadsafety.model.profile.ProfileResponse;import com.app.roadsafety.model.region.RegionUpdateRequest;import okhttp3.ResponseBody;import retrofit2.Call;import retrofit2.http.Body;import retrofit2.http.DELETE;import retrofit2.http.GET;import retrofit2.http.Header;import retrofit2.http.POST;import retrofit2.http.PUT;import retrofit2.http.Path;import retrofit2.http.Query;public interface WebServices {    @POST("/api/v1/sessions")    Call<LoginResponse> facebookLogin(@Body FacebookLoginRequest facebookLoginRequest);    @POST("/api/v1/sessions/facebook/connect")    Call<LoginResponse> connectGuestUserWithFacebook(@Header("auth-token") String token,@Body FacebookLoginRequest facebookLoginRequest);    @POST("/api/v1/users")    Call<LoginResponse> guestLogin();    @GET("/api/v1/guidelines")    Call<GuidelinesResponse> getGuidelines(@Query("page") String page);    @PUT("/api/v1/users/update")    Call<LoginResponse> setRegion(@Header("auth-token") String token, @Body RegionUpdateRequest regionUpdateRequest);    @GET("/api/v1/feeds")    Call<FeedResponse> getFeedList(@Header("auth-token") String token,@Query("page") String page, @Query("country") String country);    @GET("/api/v1/city_halls")    Call<CityHallResponse> getCityHallList();    @POST("/api/v1/incidents")    Call<CreateIncidentResponse> createIncident(@Header("auth-token") String token, @Body CreateIncidentRequest createIncidentRequest);    @GET("/api/v1/incidents")    Call<IncidentResponse> getAllIncidents(@Header("auth-token") String token, @Query("lat") String lat, @Query("lng") String lng, @Query("distance") String distance,@Query("incident_type") String incident_type , @Query("page") String page);    @GET("/api/v1/incidents/{id}")    Call<IncidentDetailResponse> getIncidentDetails(@Path("id") String id);    @PUT("/api/v1/incidents/{id}")    Call<CreateIncidentResponse> updateIncident(@Header("auth-token") String token,@Path("id") String id,@Body CreateIncidentRequest createIncidentRequest);    @DELETE("/api/v1/incidents/{id}")    Call<ResponseBody> deleteIncident(@Header("auth-token") String token, @Path("id") String id);    @PUT("/api/v1/incidents/{id}/report-abuse")    Call<ReportAbuseIncidentResponse> reportAbuse(@Header("auth-token") String token, @Path("id") String id, @Body ReportAbuseIncidentRequest reportAbuseIncidentRequest);    @GET("/api/v1/users/{id}")    Call<ProfileResponse> getProfile(@Path("id") String id);    @GET("/api/v1/notifications")    Call<NotificationResponse> getNotification(@Header("auth-token") String token, @Query("page") String page);    @PUT("/api/v1/incidents/{id}/resolve")    Call<MarkResolvedResponse> markResolved(@Header("auth-token") String token, @Path("id") String id, @Body MarkResolvedRequest markResolvedRequest);   @PUT("/api/v1/notifications/{id}/read")    Call<NotificationResponse> readNotification(@Header("auth-token") String token, @Path("id") String id);}